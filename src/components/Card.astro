---
export interface Props {
  title: string;
  description: string;
  tags: string[];
  url: string;
}

const { url, title, description, tags } = Astro.props;

// random scale between 1 and 1.3
const scale = Math.random() * 0.3 + 1;
console.log(scale);
---

<li
  class='rounded-xl p-4 transition-all ease-in-out duration-500 hover:scale-[1.02] hover:bg-dark-400 relative overflow-hidden border-[0.5px] border-light-400/10 flex flex-col justify-between'
>
  <img
    src='/assets/bg.png'
    class={`object-cover w-full h-full opacity-50 bg-dark-400 mix-blend-lighten dodge absolute inset-0 hover:opacity-100 duration-200 transform scale-[${scale}] pointer-events-none z-10`}
  />
  <div class='z-50'>
    <h2 class='text-3xl font-semibold mb-1'>
      {title}
    </h2>
    <p class='text-sm text-light-400/80'>
      {description}
    </p>
    <ul class='flex gap-2'>
      {
        tags.map((tag) => (
          <li class='px-2 py-1 mt-2 text-xs bg-dark-400 text-dark-200 max-w-fit rounded-full'>
            {tag}
          </li>
        ))
      }
    </ul>
  </div>

  <a href={url} class='z-50' target='_blank'>
    <p
      class='px-4 py-1 mt-4 text-sm bg-dark-400 text-dark-200 max-w-fit rounded-full relative overflow-hidden'
    >
      View
      <span>&rarr;</span>
      <img
        src='/assets/bg.png'
        class='object-cover w-full h-full opacity-50 bg-dark-400 mix-blend-lighten dodge absolute inset-0 hover:opacity-100 duration-200'
      />
    </p>
  </a>
</li>
